package com.cylande.unitedretail.batch.business.entity;

import com.cylande.unitedretail.framework.business.jbo.domain.common.Booleans;
import com.cylande.unitedretail.framework.business.jbo.domain.common.Integer;
import com.cylande.unitedretail.framework.business.jbo.server.EntityDefImpl;
import com.cylande.unitedretail.framework.business.jbo.server.EntityImpl;

import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FileProviderTraceImpl extends EntityImpl
{
  public static final int ID = 0;
  public static final int TASKID = 1;
  public static final int TASKCODE = 2;
  public static final int SITECODE = 3;
  public static final int DOMAIN = 4;
  public static final int PROVIDERNAME = 5;
  public static final int FILEPATH = 6;
  public static final int FILENAME = 7;
  public static final int INERROR = 8;
  public static final int TASKRUN = 9;
  private static com.cylande.unitedretail.framework.business.jbo.server.EntityDefImpl mDefinitionObject;

  /**This is the default constructor (do not remove)
   */
  public FileProviderTraceImpl()
  {
  }

  /**Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("com.cylande.unitedretail.batch.business.entity.FileProviderTrace");
    }
    return mDefinitionObject;
  }

  /**Gets the attribute value for ID, using the alias name ID
   */
  public Integer getID()
  {
    return (Integer)getAttributeInternal(ID);
  }

  /**Sets <code>value</code> as the attribute value for ID
   */
  public void setID(Integer value)
  {
    setAttributeInternal(ID, value);
  }

  /**getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
    {
      case ID:
        return getID();
      case TASKID:
        return getTaskId();
      case TASKCODE:
        return getTaskCode();
      case SITECODE:
        return getSiteCode();
      case DOMAIN:
        return getDomain();
      case PROVIDERNAME:
        return getProviderName();
      case FILEPATH:
        return getFilePath();
      case FILENAME:
        return getFileName();
      case INERROR:
        return getInError();
      case TASKRUN:
        return getTaskRun();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
    }
  }

  /**setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
    {
      case ID:
        setID((Integer)value);
        return;
      case TASKID:
        setTaskId((Integer)value);
        return;
      case TASKCODE:
        setTaskCode((String)value);
        return;
      case SITECODE:
        setSiteCode((String)value);
        return;
      case DOMAIN:
        setDomain((String)value);
        return;
      case PROVIDERNAME:
        setProviderName((String)value);
        return;
      case FILEPATH:
        setFilePath((String)value);
        return;
      case FILENAME:
        setFileName((String)value);
        return;
      case INERROR:
        setInError((Booleans)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
    }
  }

  /**Gets the attribute value for TaskId, using the alias name TaskId
   */
  public Integer getTaskId()
  {
    return (Integer)getAttributeInternal(TASKID);
  }

  /**Sets <code>value</code> as the attribute value for TaskId
   */
  public void setTaskId(Integer value)
  {
    setAttributeInternal(TASKID, value);
  }

  /**Gets the attribute value for TaskCode, using the alias name TaskCode
   */
  public String getTaskCode()
  {
    return (String)getAttributeInternal(TASKCODE);
  }

  /**Sets <code>value</code> as the attribute value for TaskCode
   */
  public void setTaskCode(String value)
  {
    setAttributeInternal(TASKCODE, value);
  }

  /**Gets the attribute value for SiteCode, using the alias name SiteCode
   */
  public String getSiteCode()
  {
    return (String)getAttributeInternal(SITECODE);
  }

  /**Sets <code>value</code> as the attribute value for SiteCode
   */
  public void setSiteCode(String value)
  {
    setAttributeInternal(SITECODE, value);
  }

  /**Gets the attribute value for Domain, using the alias name Domain
   */
  public String getDomain()
  {
    return (String)getAttributeInternal(DOMAIN);
  }

  /**Sets <code>value</code> as the attribute value for Domain
   */
  public void setDomain(String value)
  {
    setAttributeInternal(DOMAIN, value);
  }

  /**Gets the attribute value for ProviderName, using the alias name ProviderName
   */
  public String getProviderName()
  {
    return (String)getAttributeInternal(PROVIDERNAME);
  }

  /**Sets <code>value</code> as the attribute value for ProviderName
   */
  public void setProviderName(String value)
  {
    setAttributeInternal(PROVIDERNAME, value);
  }

  /**Gets the attribute value for FilePath, using the alias name FilePath
   */
  public String getFilePath()
  {
    return (String)getAttributeInternal(FILEPATH);
  }

  /**Sets <code>value</code> as the attribute value for FilePath
   */
  public void setFilePath(String value)
  {
    setAttributeInternal(FILEPATH, value);
  }

  /**Gets the associated entity TaskRunImpl
   */
  public TaskRunImpl getTaskRun()
  {
    return (TaskRunImpl)getAttributeInternal(TASKRUN);
  }

  /**Sets <code>value</code> as the associated entity TaskRunImpl
   */
  public void setTaskRun(TaskRunImpl value)
  {
    setAttributeInternal(TASKRUN, value);
  }

  /**Gets the attribute value for FileName, using the alias name FileName
   */
  public String getFileName()
  {
    return (String)getAttributeInternal(FILENAME);
  }

  /**Sets <code>value</code> as the attribute value for FileName
   */
  public void setFileName(String value)
  {
    setAttributeInternal(FILENAME, value);
  }

  /**Gets the attribute value for InError, using the alias name InError
   */
  public Booleans getInError()
  {
    return (Booleans)getAttributeInternal(INERROR);
  }

  /**Sets <code>value</code> as the attribute value for InError
   */
  public void setInError(Booleans value)
  {
    setAttributeInternal(INERROR, value);
  }

  /**Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(Integer iD)
  {
    return new Key(new Object[]{iD});
  }
}
