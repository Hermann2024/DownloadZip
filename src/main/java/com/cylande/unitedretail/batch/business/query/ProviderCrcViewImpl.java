package com.cylande.unitedretail.batch.business.query;

import com.cylande.unitedretail.batch.business.query.common.ProviderCrcViewRow;
import com.cylande.unitedretail.framework.business.jbo.server.ViewObjectImpl;
import com.cylande.unitedretail.message.batch.ProviderCrcKeyType;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.NameValuePairs;
import oracle.jbo.Row;

import org.apache.log4j.Logger;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
/**
 * View Object implementation for batch providers computed CRC History
 */
public class ProviderCrcViewImpl extends ViewObjectImpl
{
  private static final Logger LOGGER = Logger.getLogger(ProviderCrcViewImpl.class);

  /**
   * This is the default constructor (do not remove)
   */
  public ProviderCrcViewImpl()
  {
  }

  /**
   * Return the row on the key type
   * @param pKey the message key Type
   * @return ProviderCrcViewRow depends on message keyType
   */
  public ProviderCrcViewRow getRowByKey(ProviderCrcKeyType pKey)
  {
    ProviderCrcViewRow result = null;
    if (pKey != null)
    {
      result = getRowByCrc(pKey.getCrc());
    }
    return result;
  }

  /**
   * Return the row on the crc32 value
   * @param pCrc searched (pk on that table).
   * @return ProviderCrcRow on crc32 selection
   */
  public ProviderCrcViewRow getRowByCrc(String pCrc)
  {
    if (pCrc != null)
    {
      AttributeList myList = new NameValuePairs();
      myList.setAttribute("Crc", pCrc);
      Key myKey = createKey(myList);
      Row[] myArray = findByKey(myKey, -1);
      int recordCount = myArray.length;
      if (recordCount == 1)
      {
        return (ProviderCrcViewRow)myArray[0];
      }
      else
      {
        LOGGER.info("getRowByCrc : " + pCrc + " : " + recordCount);
        return null;
      }
    }
    else
    {
      LOGGER.warn("getRowByCrc : null Crc criteria");
      return null;
    }
  }
}
