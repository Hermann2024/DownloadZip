package com.cylande.unitedretail.batch.business.entity;

import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------

import com.cylande.unitedretail.batch.business.validator.TaskValidator;
import com.cylande.unitedretail.framework.business.jbo.domain.common.Booleans;
import com.cylande.unitedretail.framework.business.jbo.domain.common.Integer;
import com.cylande.unitedretail.framework.business.jbo.domain.common.Timestamp;
import com.cylande.unitedretail.framework.business.jbo.server.EntityDefImpl;
import com.cylande.unitedretail.framework.business.jbo.server.EntityImpl;
import com.cylande.unitedretail.message.common.context.ContextType;

public class TaskAuditImpl extends EntityImpl
{
  public static final int CREATIONTIME = 0;
  public static final int CREATIONUSERCODE = 1;
  public static final int MODIFICATIONTIME = 2;
  public static final int MODIFICATIONUSERCODE = 3;
  public static final int SITECODE = 4;
  public static final int PATH = 5;
  public static final int TASK = 6;
  public static final int ID = 7;
  public static final int EVENTTIME = 8;
  public static final int ERRORCODE = 9;
  public static final int ERRORMESSAGE = 10;
  public static final int FILEID = 11;
  public static final int TASKRUN = 12;
  private static com.cylande.unitedretail.framework.business.jbo.server.EntityDefImpl mDefinitionObject;

  /**
   * This is the default constructor (do not remove)
   */
  public TaskAuditImpl()
  {
  }

  /**Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("com.cylande.unitedretail.batch.business.entity.TaskAudit");
    }
    return mDefinitionObject;
  }

  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
    {
      case CREATIONTIME:
        return getCreationTime();
      case CREATIONUSERCODE:
        return getCreationUserCode();
      case MODIFICATIONTIME:
        return getModificationTime();
      case MODIFICATIONUSERCODE:
        return getModificationUserCode();
      case SITECODE:
        return getSiteCode();
      case PATH:
        return getPath();
      case TASK:
        return getTask();
      case ID:
        return getId();
      case EVENTTIME:
        return getEventTime();
      case ERRORCODE:
        return getErrorCode();
      case ERRORMESSAGE:
        return getErrorMessage();
      case FILEID:
        return getFileId();
      case TASKRUN:
        return getTaskRun();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
    }
  }

  /**
   * setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
    {
      case SITECODE:
        setSiteCode((String)value);
        return;
      case PATH:
        setPath((String)value);
        return;
      case TASK:
        setTask((Integer)value);
        return;
      case ID:
        setId((Integer)value);
        return;
      case EVENTTIME:
        setEventTime((Timestamp)value);
        return;
      case ERRORCODE:
        setErrorCode((String)value);
        return;
      case ERRORMESSAGE:
        setErrorMessage((String)value);
        return;
      case FILEID:
        setFileId((Integer)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
    }
  }

  /**
   * Gets the attribute value for EventTime, using the alias name EventTime
   */
  public Timestamp getEventTime()
  {
    return (Timestamp)getAttributeInternal(EVENTTIME);
  }

  /**
   * Sets <code>value</code> as the attribute value for EventTime
   */
  public void setEventTime(Timestamp value)
  {
    setAttributeInternal(EVENTTIME, value);
  }

  /**
   * Gets the attribute value for ErrorCode, using the alias name ErrorCode
   */
  public String getErrorCode()
  {
    return (String)getAttributeInternal(ERRORCODE);
  }

  /**
   * Sets <code>value</code> as the attribute value for ErrorCode
   */
  public void setErrorCode(String value)
  {
    setAttributeInternal(ERRORCODE, value);
  }

  /**
   * Gets the attribute value for ErrorMessage, using the alias name ErrorMessage
   */
  public String getErrorMessage()
  {
    return (String)getAttributeInternal(ERRORMESSAGE);
  }

  /**
   * Sets <code>value</code> as the attribute value for ErrorMessage
   */
  public void setErrorMessage(String value)
  {
    setAttributeInternal(ERRORMESSAGE, value);
  }

  /**
   * Gets the attribute value for Path, using the alias name Path
   */
  public String getPath()
  {
    return (String)getAttributeInternal(PATH);
  }

  /**
   * Sets <code>value</code> as the attribute value for Path
   */
  public void setPath(String value)
  {
    setAttributeInternal(PATH, value);
  }

  /**
   * Gets the attribute value for CreationTime, using the alias name CreationTime
   */
  public Timestamp getCreationTime()
  {
    return (Timestamp)getAttributeInternal(CREATIONTIME);
  }

  /**
   * Gets the attribute value for CreationUserCode, using the alias name CreationUserCode
   */
  public String getCreationUserCode()
  {
    return (String)getAttributeInternal(CREATIONUSERCODE);
  }

  /**
   * Gets the attribute value for ModificationTime, using the alias name ModificationTime
   */
  public Timestamp getModificationTime()
  {
    return (Timestamp)getAttributeInternal(MODIFICATIONTIME);
  }

  /**
   * Gets the attribute value for ModificationUserCode, using the alias name ModificationUserCode
   */
  public String getModificationUserCode()
  {
    return (String)getAttributeInternal(MODIFICATIONUSERCODE);
  }

  /**
   * Gets the attribute value for Id, using the alias name Id
   */
  public Integer getId()
  {
    return (Integer)getAttributeInternal(ID);
  }

  /**
   * Sets <code>value</code> as the attribute value for Id
   */
  public void setId(Integer value)
  {
    setAttributeInternal(ID, value);
  }

  /**
   * Gets the attribute value for Task, using the alias name Task
   */
  public Integer getTask()
  {
    return (Integer)getAttributeInternal(TASK);
  }

  /**
   * Sets <code>value</code> as the attribute value for Task
   */
  public void setTask(Integer value)
  {
    setAttributeInternal(TASK, value);
  }

  /**
   * Validation method for TaskAudit
   */
  public boolean validateTask()
  {
    return getPath() != null && getTask() != null ? TaskValidator.isExisting(getPath(), getTask(), (ContextType)getContext()) : true;
  }

  /**
   * Gets the attribute value for SiteCode, using the alias name SiteCode
   */
  public String getSiteCode()
  {
    return (String)getAttributeInternal(SITECODE);
  }

  /**
   * Sets <code>value</code> as the attribute value for SiteCode
   */
  public void setSiteCode(String value)
  {
    setAttributeInternal(SITECODE, value);
  }

  /**
   * Gets the associated entity TaskRunImpl
   */
  public TaskRunImpl getTaskRun()
  {
    return (TaskRunImpl)getAttributeInternal(TASKRUN);
  }

  /**
   * Sets <code>value</code> as the associated entity TaskRunImpl
   */
  public void setTaskRun(TaskRunImpl value)
  {
    setAttributeInternal(TASKRUN, value);
  }

  protected void doDML(int pOperation, TransactionEvent pTransactionEvent)
  {
    if (pOperation == DML_INSERT)
    {
      TaskRunImpl taskRun = getTaskRun();
      if (taskRun.getInError() == null)
      {
        taskRun.setInError(new Booleans(true));
      }
    }
    super.doDML(pOperation, pTransactionEvent);
  }

  /**Gets the attribute value for FileId, using the alias name FileId
   */
  public Integer getFileId()
  {
    return (Integer)getAttributeInternal(FILEID);
  }

  /**Sets <code>value</code> as the attribute value for FileId
   */
  public void setFileId(Integer value)
  {
    setAttributeInternal(FILEID, value);
  }

  /**Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(Integer id)
  {
    return new Key(new Object[]{id});
  }
}
